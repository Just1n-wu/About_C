// 1. 计算 n 的阶乘
#include<stdio.h>

int main()
{
	int i, n, result = 1;
	printf("请输入 n :");
	scanf("%d", &n);
	
	for(i = 1; i <= n; i++)
		result *= i;
	
	printf("n的阶乘是%d\n", result);
	
	return 0;
}

// 2. 计算 1-100 之间奇数和，偶数积

#include<stdio.h>

int main()
{
	int i, sum = 0;
	double acc = 1.0;
	for(i = 1; i <= 100; i += 2)  // 奇数
	{
		sum += i;  // 奇数和     1 + 3 + 5
		acc *= (i + 1);   // 偶数积   2 * 4 * 6
	}
	
	printf("奇数和为：%d\n偶数积为：%.0lf\n", sum, acc);
}

// 3. 输入一行字符，统计其中英文字母、数字、空格和其他字符的个数

#include<stdio.h>

int main()
{
	int count[4] = { 0 }, *p = count;
	char c;
	printf("请输入一行字符：");
	while((c = getchar())!= '\n')
	{
		if(c >= 'A' && c <= 'z')
			count[0]++;  // 英文计数
		else if(c >= '0' && c <= '9')
			(*(p+1))++;    // 数字计数
		else if(c == ' ')
			(*(p+2))++;    // 空格计数
		else
			count[3]++;  // 其他
	}
	
	for(int j = 0; j < 4; j++)
		printf("%d ", count[j]);  // 练习简写了
}

// 4. 用循环语句编写 2^0 + 2^1 + … + 2^63

#include<stdio.h>

int main()
{
    double result = 0.0, temp = 1.0;
	int i;
	for(i = 0; i < 64; i++)
	{
		result += temp;
		temp *= 2;
		
	}
	
	printf("结果是：%.0lf\n", result);
}

// 5. 求 1！+ 2！+ …… +20！的和

#include<stdio.h>

int func(int x)
{
	return x == 1 || x == 0 ? 1 : x * func(x - 1);
}

int main()
{
	int i, sum = 0; 
	for(i = 1; i <= 20; i++)
		sum += func(i);
	printf("sum = %d\n", sum);
}

// 6. 求 2/1 + 3/2 + 5/3 + 8/5 数列前20项和

#include<stdio.h>

int main()
{
	double a = 2.0, b = 1.0, sum = 0.0;
	
	for(int i = 0; i < 20; i++)
	{
		sum += a / b;
		a = a + b;
		b = a - b;
	}
	
	printf("sum = %.4lf", sum);
}

// 7. 任意十个数，打印最大数和最小数
// 1, -12, 20, 30, -5, -23, 33, 125, 200, -100

#include<stdio.h>

int main()
{
	int arr[10];
	int i = 0, max, min;
	for(; i < 10; i++)
	{
		printf("请输入第%2d 个数:", i + 1);
		scanf("%d", &arr[i]);
	}
	max = min = arr[0]; 
	
	// 擂台法
	for(i -= 1; i > -1; i--)
	{
		if(arr[i] > max)
			max = arr[i];
		if(arr[i] < min)
			min = arr[i];
	}
	
	printf("min = %d\nmax = %d\n", min, max);
	
	return 0;
}

// 8. 判断一个数是素数

#include<stdio.h>
#include<stdbool.h>

bool IsPrime(int x)
{
	int i, j;
	for(i = 2; i < x; i++)
	{
		if(x % i == 0)
		{
			return true;
			break;
		}
		
		else 
			return false;
	}
}

int main()
{
	int num;
	printf("请输入一个数:");
	scanf("%d", &num);
	
	if(IsPrime(num))
		printf("不是素数\n");
	else 
		printf("是素数\n");
		
}



// 9. 打印 1-100 之间所有的素数

#include<stdio.h>

int main()
{
	int i, j;
	// 遍历 1 - 100
	for(i = 2; i <= 100; i++) // 1不是素数，2是最小的素数
	{
		// 判断素数
		for(j = 2; j < i; j++)  // 除了1和它本身以外不再有其他的因数
			if(i % j == 0)
				break;
		
		if(j == i)
			printf("%d ", i);
	}
}

// 10. 求 1-100 之间素数的和

#include<stdio.h>

int main()
{
	int i, j, sum = 2;
	// 遍历 1 - 100
	for(i = 2; i <= 100; i++) // 1不是素数，2是最小的素数
	{
		// 判断素数
		for(j = 2; j < i; j++)  // 除了1和它本身以外不再有其他的因数
		{
			if(i % j == 0)
				break;
		    else if(j == i - 1)
				sum += i;
		}
	}
	printf("Sum = %d\n", sum);
}

// 11. 求 1-100 之间非素数的和

#include<stdio.h>

int main()
{
	int i, j, sum = 1;
	for(i = 1; i <= 100; i++)
	{
		for(j = 2; j < i; j++)
		{
			if(i % j == 0 && i > 2)
			{
				sum += i;
				break;
			}
		}
	}
	
	printf("sum = %d\n", sum);
}