//  Created by Just1n on 22/20/5.
//  Copyright (c) 2022年 . All rights reserved


/* if 的应用
	v < 200            没有折扣  
	200 <= v < 400     5%  折扣
	400 <= v < 800     10% 折扣
	800 <= v < 1600    15% 折扣
	1600 <= v          20% 折扣
输入 3000   
输出 应付金额 2400.000000元   优惠 600元 */

#include<stdio.h>

int main()
{
	float num, v;
	scanf("%f", &num);
	
	if(num < 200.0)
		v = 0;
	else if(num < 400.0)
		v = num * 0.05;
	else if(num < 800)
		v = num * 0.1;
	else if(num < 1600)
		v = num * 0.15;
	else
		v = num * 0.2;
	
	printf("应付金额%f元, 优惠 %.0f 元", num - v, v);
	
	return 0;
}

/* 判断三角形：从键盘输入 3 个正整数作为三角形 3 条边的边长值，判断这 3 条边能否构 成三角形，
   如果能构成三角形，再判断是等边三角形、等腰三角形还是一般三角形，输出相
   应的结果（“不能构成三角形”，“一般三角形”,“等腰三角形”，“等边三角形”） */
   
#include<stdio.h>

int main()
{
	int a, b, c;
	printf("请输入三角形三边（a, b, c）：");
	scanf("%d,%d,%d", &a, &b, &c);
	
	// 判断三角形是否成立
	if(a + b > c && a + c > b && c + b > a)
	{
		// 判断三角形类别
		if(a == b && b == c) // 如果 a 等于 b 并且 b 等于 c， 那么 a 必然等于 c
			printf("这是一个等边三角形\n");
		else if(a == b || a == c || b == c)
			printf("这是一个等腰三角形\n");
		else 
			printf("这是一个一般三角形\n");
	}
	
	else
		printf("不能构成三角形\n");
	
	return 0;
	
}

/*从键盘输入表示月份的一个正整数，输出其对应的季度。用 switch 语句编程。
（1） 输入 3 输出 “第一季度”
（2） 输入 15 输出 “月份输入错误”
*/

#include<stdio.h>

int main()
{
	int month;
	printf("请输入一个月份:");
	scanf("%d", &month);
	
	switch(month)
	{
		case 1: case 2:
		case 3: 
		printf("第一季度\n"); break; 
		
		case 4: case 5:
		case 6: 
		printf("第二季度\n"); break; 
		
		case 7: case 8:
		case 9: 
		printf("第三季度\n"); break;
		
		case 10: case 11:
		case 12:
		printf("第四季度\n"); break;
		
		default:
		printf("月份输入错误\n");
		
	}
	
	return 0;
}

// 编程输出如下九九乘法表

#include<stdio.h>

int main()
{
	int i, j;
	for(i = 1; i <= 9; i++)
	{
		for(j = 1; j <= i; j++)
			printf("%d*%d=%-2d  ", j, i, i * j);
		putchar('\n');
	}
	
	printf("形式2：");
	putchar('\n');
	
	for(i = 1; i <= 9; i++)
	{
		for(j = 1; j <= 9; j++)
			printf("%d*%d=%-2d  ", i, j, i * j);
		putchar('\n');
	}
	
	printf("形式3：");
	putchar('\n');
	
	for(i = 9; i > 0; i--)
	{
		for(j = i; j > 0; j--)
			printf("%d*%d=%-2d  ", i, j, i * j);
		putchar('\n');
	}
}


// 古代数学中的百马百担问题。假设大马一次驮 4 担，中马一次驮 2 担，小马 4 匹驮 1 担，
// 三种马一共驮 100 担粮食。编程列出所有可能的方案（每种马均有），并统计共有多少种方案

#include<stdio.h>

int main()
{
	int BHouse, MHouse, SHouse;
	for(BHouse = 0; BHouse <= 25; BHouse++)
		for(MHouse = 0; MHouse <= 50; MHouse++)
		{
			SHouse = 100 - BHouse - MHouse;
			if(SHouse % 4 != 0)
				continue;
			
			if(BHouse * 4 + MHouse * 2 + SHouse / 4 == 100) //&& SHouse % 4 == 0
				printf("大马 %d 匹，中马 %d 匹， 小马 %d 匹\n", BHouse, MHouse, SHouse);
		}
}

// 编程输出 1600——2000 年间所有闰年的年号，要求每 5 个年份为一行输出。
// 某年份能被 4 整除但不能被 100 整除或者能被 400 整除则称为闰年

#include<stdio.h>
int main()
{
	int year = 1600, count = 0;
	for(; year <= 2000; year++)
	{
		if(year % 4 == 0 && year % 100 != 0 || year % 400 == 0)
		{
			printf("%d ", year);
			count++;
			if(count % 5 == 0)
			printf("\n");
		}
	}
}

// 输入一个日期，输出这一天是这一年的第几天？ 
// 程序分析：以 3 月 5 日为例，应该先把前两个月的加起来，然后再加上 5 天即本年的第几天，
// 特殊情况，闰年且输入月份大于 3 时需考虑多加一天

#define DAYS 13
#include<stdio.h>

int main()
{
	int arr[DAYS] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	int year, month, day, day_sum, i;
	printf("请输入今天日期(格式：yyyy-mm-tt)：");
	scanf("%4d%2d%2d", &year, &month, &day);
	
	for(i = 0; i < month; i++)
		day_sum += arr[i];
	day_sum += day;
	
	if(year % 4 == 0 && year % 400 != 0 || year % 400 == 0)
		day_sum += 1;
	
	printf("%d年%d月%d日是该年的第%d天!\n", year, month, day, day_sum);
	
	return 0;
}

// 编程求 s=1+(1+2)+(1+2+3)+……+(1+2+3+……+n),n 为从键盘输入的一个正整数。

#include<stdio.h>

int fun(int x)
{
	int i, j, sum = 0;
    for(i = 1; i <= x; i++)
        for(j = 1; j <= i; j++)
			sum += j;
		
	return sum;
}

int fun2(int x)
{
	int i, sum = 0, result = 0;
	for(i = 1; i <= x; i++)
	{
		sum += i;
		result += sum;
	}
	
	return result; 
}

// 递归累加, 只需循环即可
int sum(int x)
{
	
	if(x == 1)
		return 1;
	else
		return x + sum(x - 1);
		
	// return x == 1 ? 1 : x + sum(x - 1);
}

int main()
{
	int n;
	printf("请输入 n 值:");
	scanf("%d", &n);
	
	printf("输入的 n 值为 %d, 结果是%d。\n", n, fun(n));
	printf("输入的 n 值为 %d, 结果是%d。\n", n, fun2(n));
	printf("输入的 n 值为 %d, 结果是%d。\n", n, sum(n));

	
	return 0;
}

// 从键盘输入 10 个成绩（浮点数），编程计算并输出大于平均分的成绩及超过平均分的人数。

#include<stdio.h>
int main()
{
	int count = 0, i;
	float score[10], sum = 0.0, arge;
	
	for(i = 0; i < 10; i++)
	{
		printf("请输入第 %d 名同学的成绩：", i + 1);
		scanf("%f", &score[i]);
		sum += score[i];
	}
	
	arge = sum / 10;
	
	for(; i >= 0; i--)
	{
		if(score[i] > arge)
		{
			printf("%.2f ", score[i]);
			count++;
		}
	}
	
	putchar('\n');
	printf("共有 %d 个学生超过了平均分", count);
	
	return 0;
}

// 从键盘输入一行英文字符，编程输出其中的单词个数（单词之间以空格分隔）

#include<stdio.h>
int main()
{
	char c;
	int count = 0, flag;
	
	while((c = getchar()) != '\n')
	{
		if (c == ' ') 
		{
            flag = 1;  // 确定输入一个单词
        } 
		
		else if (flag) 
		{
            count++;
            flag = 0; // 单词输入未结束
        }
	}
	
	printf("输入了%d个\n", count);
	return 0;
}